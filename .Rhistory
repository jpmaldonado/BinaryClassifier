setwd("~/Documents/Portfolio/BinaryClassifier-master")
read.csv("./data/new.csv")
read.csv("./data/new.csv", sep=";")
df <- read.csv("./data/new.csv", sep=";")
head(df)
df <- read.csv("./data/bank.csv", sep=";")
head(df)
library(cars)
library(mpg)
mpg
cars
head(cars)
install.packages("mlbench")
library(mlbench)
df <- data("BreastCancer")
df
data("BreastCancer")
BreastCancer
head(BreastCancer
)
model <- glm(Class ~ ., family = binomial(link="logit"))
dataFromROCR <- function(preds,labels,modelName, meas, x.meas){
# Returns data to make ROCR package plots in ggplot
pred.obj <- prediction(predictions=preds,
labels=labels)
# Get data for ROC curve
perf.obj <- performance(pred.obj, measure=meas, x.measure=x.meas)
roc.data <- data.frame(x=unlist(perf.obj@x.values),
y=unlist(perf.obj@y.values))
roc.data$Model = modelName
roc.data
}
## Demo
library(mlbench)
data("BreastCancer")
model <- glm(Class ~ ., data= BreastCancer, family = binomial(link="logit"))
preds <- predict(BreastCancer)
model
predict.glm(model, BreastCancer)
?predict
preds
preds <- predict(model,BreastCancer)
preds
BreastCancer
head(BreastCancer)
dataFromROCR <- function(preds,labels,modelName, meas, x.meas){
# Returns data to make ROCR package plots in ggplot
pred.obj <- prediction(predictions=preds,
labels=labels)
# Get data for ROC curve
perf.obj <- performance(pred.obj, measure=meas, x.measure=x.meas)
roc.data <- data.frame(x=unlist(perf.obj@x.values),
y=unlist(perf.obj@y.values))
roc.data$Model = modelName
roc.data
}
## Demo
library(mlbench)
data("BreastCancer")
df <- BreastCancer
df$Id <- NULL
model <- glm(Class ~ ., data= df, family = binomial(link="logit"))
preds <- predict(model,df)
preds
dataFromROCR(preds, df$Class, modelName = "model", meas = "tpr", x.meas="fpr")
dataFromROCR <- function(preds,labels,modelName, meas, x.meas){
# Returns data to make ROCR package plots in ggplot
pred.obj <- prediction(predictions=preds,
labels=labels)
# Get data for ROC curve
perf.obj <- performance(pred.obj, measure=meas, x.measure=x.meas)
roc.data <- data.frame(x=unlist(perf.obj@x.values),
y=unlist(perf.obj@y.values))
roc.data$Model = modelName
roc.data
}
## Demo
library(ROCR)
library(mlbench)
data("BreastCancer")
df <- BreastCancer
df$Id <- NULL
model <- glm(Class ~ ., data= df, family = binomial(link="logit"))
preds <- predict(model,df)
dataFromROCR(preds, df$Class, modelName = "model", meas = "tpr", x.meas="fpr")
library(ROCR)
install.packages("ROCR")
dataFromROCR <- function(preds,labels,modelName, meas, x.meas){
# Returns data to make ROCR package plots in ggplot
pred.obj <- prediction(predictions=preds,
labels=labels)
# Get data for ROC curve
perf.obj <- performance(pred.obj, measure=meas, x.measure=x.meas)
roc.data <- data.frame(x=unlist(perf.obj@x.values),
y=unlist(perf.obj@y.values))
roc.data$Model = modelName
roc.data
}
## Demo
library(ROCR)
library(mlbench)
data("BreastCancer")
df <- BreastCancer
df$Id <- NULL
model <- glm(Class ~ ., data= df, family = binomial(link="logit"))
preds <- predict(model,df)
dataFromROCR(preds, df$Class, modelName = "model", meas = "tpr", x.meas="fpr")
plotData <- dataFromROCR(preds, df$Class, modelName = "model", meas = "tpr", x.meas="fpr")
view(plotData)
head(plotData)
dataFromROCR <- function(preds,labels, meas, x.meas){
# Returns data to make ROCR package plots in ggplot
pred.obj <- prediction(predictions=preds,
labels=labels)
# Get data for ROC curve
perf.obj <- performance(pred.obj, measure=meas, x.measure=x.meas)
roc.data <- data.frame(x=unlist(perf.obj@x.values),
y=unlist(perf.obj@y.values))
roc.data
}
#######################################
## Demo
#######################################
library(ROCR)
library(mlbench) #Collection of data sets, just to have something to try
data("BreastCancer")
df <- BreastCancer
df$Id <- NULL
model <- glm(Class ~ ., data= df, family = binomial(link="logit"))
preds <- predict(model,df)
plotData <- dataFromROCR(preds, df$Class, meas = "tpr", x.meas="fpr")
plotData
plot(plotData$x,plotData$y)
